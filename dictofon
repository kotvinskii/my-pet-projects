"""–ë–∏–±–ª–∏–æ—Ç–µ–∫–∏, –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–ª—è —Ä–∞–±–æ—Ç—ã –¥–∏–∫—Ç–æ—Ñ–æ–Ω–∞"""
import wave
import tkinter
import os
import time
import threading
import pyaudio


class VoiceRecorder():
    def __init__(self):
        self.root = tkinter.Tk() # –æ–∫–Ω–æ, –≥–¥–µ –±—É–¥–µ—Ç –Ω–∞—à–∞ –≤–∏–¥–µ–æ–∑–∞–ø–∏—Å—å
        self.root.title("–ê—É–¥–∏–æ–∑–∞–ø–∏—Å—å")
        self.root.resizable(False, False) # –æ–∫–Ω–æ –º—ã –Ω–µ —Ä–∞—Å—Ç—è–≥–∏–≤–∞–µ–º
        self.button = tkinter.Button(
            text='üéôÔ∏è',
            font=('Arial', 120, "bold"), # —à—Ä–∏—Ñ—Ç(–Ω–æ–º–µ—Ä, —Ä–∞–∑–º–µ—Ä, –∂–∏—Ä–Ω–æ—Å—Ç—å)
            command=self.click_handler # —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É
        )
        self.button.pack()
        self.label = tkinter.Label(text="00:00:00") # –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—Ä–µ–º—è
        self.label.pack()
        self.recording = False # –∏–¥–µ—Ç —É –Ω–∞—Å –∑–∞–ø–∏—Å—å –∏–ª–∏ –Ω–µ—Ç(–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å—Ç–æ–∏—Ç –Ω–µ—Ç)
        self.root.mainloop() # –∑–∞–ø—É—Å–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã

    def click_handler(self): # –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É
        if self.recording: # –∑–∞–ø–∏—Å—å —É–∂–µ –∏–¥–µ—Ç
            self.recording = False
        else:
            self.recording = True
            threading.Thread(target=self.record).start()

    def recording_handler(self): # –∑–∞–ø–∏—Å—å –∑–≤—É–∫–∞
        audio = pyaudio.PyAudio()
        stream = audio.open( # –∑–∞–ø–∏—Å—å –ø–æ—Ç–æ–∫–∞ –∑–≤—É–∫–∞
            format=pyaudio.paInt16,
            channels=1, # –∫–∞–Ω–∞–ª—ã –∑–≤—É–∫–∞
            rate=44100, # —á–∞—Å—Ç–æ—Ç–∞ –∑–≤—É–∫–∞
            input=True,
            frames_per_buffer=1024 # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–¥—Ä–æ–≤ –≤ –±—É—Ñ–µ—Ä–µ
        )
        frames = [] # –∫–∞–¥—Ä—ã
        start = time.time()
        while self.recording: # –ø–æ–∫–∞ –∏–¥–µ—Ç –∑–∞–ø–∏—Å—å
            data = stream.read(1024, exception_on_overflow=False) # –∑–∞—â–∏—Ç–∞ –æ—Ç –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏—è –±—É—Ñ–µ—Ä–∞
            frames.append(data)
            passed_time = time.time() - start # —Å–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–æ—à–ª–æ —Å –Ω–∞—á–∞–ª–∞ –∑–∞–ø–∏—Å–∏
            seconds = passed_time % 60
            minutes = passed_time // 60
            hours = minutes // 60
            self.label.config(text=f"{int(hours):02d}:{int(minutes):02d}:{int(seconds):02d}") # –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏

        stream.stop_stream()
        stream.close() # –∫–æ–Ω–µ—Ü –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –ø–æ—Ç–æ–∫–∞
        audio.terminate() # –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å–µ–∞–Ω—Å–∞

        exists = True
        i = 1
        while exists:
            if os.path.exists(f'recording{i}wav'): # —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª recording{i}(–ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä —Ñ–∞–π–ª–∞) –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
                i += 1
        """–ó–∞–ø–∏—Å—å —Ñ–∞–π–ª–∞ –≤ –¥–≤–æ–∏—á–Ω–æ–º –≤–∏–¥–µ"""
        sound_file = wave.open(f'recording.wav', 'wb')
        sound_file.setnchannels(1)
        sound_file.setsampwidth(audio.get_sample_size(pyaudio.paInt16))
        sound_file.setframerate(44100)
        sound_file.writeframes(b''.join(frames))
        sound_file.close()
VoiceRecorder()
